-- Drop and recreate tables to add support for different question types
-- WARNING: This will delete ALL data (sessions, submissions, responses, questions)!
-- Make sure to backup your data first if needed.

-- Drop tables in correct order (respecting foreign keys)
DROP TABLE SURVEYS.RESPONSES;
DROP TABLE SURVEYS.SUBMISSIONS;
DROP TABLE SURVEYS.SESSIONS;
DROP TABLE SURVEYS.PROBLEMS;
DROP TABLE SURVEYS.SECTIONS;
DROP TABLE SURVEYS.CONFIG;

-- Recreate SESSIONS table
CREATE TABLE SURVEYS.SESSIONS (
    ID VARCHAR(255) NOT NULL PRIMARY KEY,
    NAME VARCHAR(500) NOT NULL,
    DESCRIPTION CLOB,
    CREATED_AT TIMESTAMP NOT NULL,
    IS_ACTIVE SMALLINT DEFAULT 1,
    IS_DELETED SMALLINT DEFAULT 0,
    RESPONSE_COUNT INT DEFAULT 0
);

-- Recreate SUBMISSIONS table
CREATE TABLE SURVEYS.SUBMISSIONS (
    ID VARCHAR(255) NOT NULL PRIMARY KEY,
    SESSION_ID VARCHAR(255),
    TIMESTAMP TIMESTAMP NOT NULL,
    RESPONDENT_NAME VARCHAR(500),
    RESPONDENT_EMAIL VARCHAR(500),
    NOTES CLOB,
    FOREIGN KEY (SESSION_ID) REFERENCES SURVEYS.SESSIONS(ID)
);

-- Recreate CONFIG table
CREATE TABLE SURVEYS.CONFIG (
    ID VARCHAR(255) NOT NULL PRIMARY KEY,
    TITLE VARCHAR(500) NOT NULL,
    DESCRIPTION CLOB,
    IS_ACTIVE SMALLINT DEFAULT 1,
    CREATED_AT TIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP NOT NULL
);

-- Recreate SECTIONS table
CREATE TABLE SURVEYS.SECTIONS (
    ID VARCHAR(255) NOT NULL PRIMARY KEY,
    CONFIG_ID VARCHAR(255) NOT NULL,
    NAME VARCHAR(500) NOT NULL,
    COLOR VARCHAR(50),
    DISPLAY_ORDER INT NOT NULL,
    FOREIGN KEY (CONFIG_ID) REFERENCES SURVEYS.CONFIG(ID)
);

-- Recreate PROBLEMS table with new columns
CREATE TABLE SURVEYS.PROBLEMS (
    ID INT NOT NULL PRIMARY KEY,
    SECTION_ID VARCHAR(255) NOT NULL,
    TITLE CLOB NOT NULL,
    QUESTION_TYPE VARCHAR(50) DEFAULT 'slider',
    OPTIONS CLOB,
    DISPLAY_ORDER INT NOT NULL,
    FOREIGN KEY (SECTION_ID) REFERENCES SURVEYS.SECTIONS(ID)
);

-- Recreate RESPONSES table with nullable columns
CREATE TABLE SURVEYS.RESPONSES (
    ID INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SUBMISSION_ID VARCHAR(255) NOT NULL,
    PROBLEM_ID INT NOT NULL,
    FREQUENCY INT,
    SEVERITY INT,
    TEXT_RESPONSE CLOB,
    FOREIGN KEY (SUBMISSION_ID) REFERENCES SURVEYS.SUBMISSIONS(ID)
);

-- AI Insights table
CREATE TABLE SURVEYS.AI_INSIGHTS (
    ID VARCHAR(255) NOT NULL PRIMARY KEY,
    SESSION_ID VARCHAR(255),
    SUMMARY CLOB NOT NULL,
    TOP_PROBLEMS CLOB NOT NULL,
    CHOICE_ANALYSIS CLOB,
    RESPONSE_COUNT INT NOT NULL,
    GENERATED_AT TIMESTAMP NOT NULL,
    FOREIGN KEY (SESSION_ID) REFERENCES SURVEYS.SESSIONS(ID)
);

-- Recreate indexes
CREATE INDEX SURVEYS.IDX_SUBMISSIONS_SESSION ON SURVEYS.SUBMISSIONS(SESSION_ID);
CREATE INDEX SURVEYS.IDX_RESPONSES_SUBMISSION ON SURVEYS.RESPONSES(SUBMISSION_ID);
CREATE INDEX SURVEYS.IDX_SESSIONS_ACTIVE ON SURVEYS.SESSIONS(IS_ACTIVE);
CREATE INDEX SURVEYS.IDX_SECTIONS_CONFIG ON SURVEYS.SECTIONS(CONFIG_ID);
CREATE INDEX SURVEYS.IDX_PROBLEMS_SECTION ON SURVEYS.PROBLEMS(SECTION_ID);
CREATE INDEX SURVEYS.IDX_AI_INSIGHTS_SESSION ON SURVEYS.AI_INSIGHTS(SESSION_ID);

COMMIT;
